1.数据类型转换
	1.隐式转换
		不同类型的数据在计算过程中自动进行转换	
		1.数值+字符串：数值转为字符串
			字符串相加，“+”表示拼接
			console.log(1+'Hi'); //1Hi
		
		2.数值+布尔：布尔转为数值，true转为1，false转为0
			console.log(1+true); //2
		
		3.字符串+布尔：布尔转为字符串
			console.log('Hi'+false); //Hifalse
		
		4.布尔+布尔：都转为数值
			console.log(true+false); //1
		
		- * /运算
			运算符两边的数据都转为数值型数据，并且计算机内部是用Number()方法转换的

	2.强制转换
		1.Number(数据)
			将数据转为数值型
			数据中如果包含无法转为数值的字符，则直接返回NaN
			可以识别小数点
		2.parseInt(数据)
			将数据转为整数
			从第一位无法转为数值的字符开始，后续数据全部舍去，如果第一位就无法转为数值，则返回NaN
			不识别小数点
		3.parseFloat(数据)
			将数据转为浮点型
			从第一位无法转为数值的字符开始，后续数据全部舍去，如果第一位就无法转为数值，则返回NaN
			识别小数点

		练习：声明一个变量balance保存银行卡余额，在弹出框中输入要存储的金额，并保存在变量money中，在控制台输出存储后的银行卡余额
			var money=prompt('请输入要存储的金额：');
2.运算符和表达式
	1.表达式
		由运算符和操作数组成的式子就是表达式
		任何表达式一定会有结果
	
	2.运算符
		1.求幂运算符
			**
			3**4 3的4次方
		
		2.算术运算符
			+ - * / % ++ --

			% 取余或者取模
				5%2 //1
				9%3 //0
				5%10 //5

				水仙花数：
					个位：x%10
					十位：parseInt(x/10)%10
					百位：parseInt(x/100)
			
			++ 自增运算，只做+1运算
				++在后，先把内存中的数拿过来当做表达式的结果，之后再自加
				
				++在前，先在内存中+1，再把结果拿过来当做表达式的结果
			
			-- 自减运算，只做-1运算


		3.比较运算符
			> < >= <= == != === !==

			== 相等比较，会做隐式转换
				1=='1' //true
				
			=== 全等比较，不会隐式转换(既要数值相等，又要数据类型相同)
				1==='1' //false
			
			注意：
				1. 5>'10' //false
					比较运算符(> < >= <= == !=)两端，只要有一个Number类型，另外一个就会隐式转换为Number类型
				
				2. '5'>'10' //true
					比较运算符两端如果都是String类型，则比较每位字符的Unicode码，以首位Unicode码不等的结果作为整体结果
				
				3.'3a'>10 //false
					Number('3a')-->NaN
					注意：
						NaN与任何数据做> < >= == ===比较，结果都是false

						NaN与任何数据做!= !==比较结果都是true

						NaN==NaN //false
		4.逻辑运算符
			!  &&  ||
			
			! 取反
				如果!后边的数据不是布尔型，则会转为布尔型，然后再取反
				!true //false
				
				!1 //false
				!2 //false

				!!数据 会将数据强制转换为布尔型

				以下几种情况转为布尔型都是false：
					!!0
					!!''
					!!NaN
					!!undefined
					!!null
			
			&& 并且，关联的两个条件都为true，结果才是true，否则为false
			
			|| 或者，关联的两个条件只要有一个是true，结果就是true，否则为false


			短路逻辑--&&
				当第一个条件为false时，就不再判断或执行第二个条件或表达式
			
			短路逻辑--||
				当第一个条件为true时，就不再判断或执行第二个条件或表达式
			
			练习1：在弹出框中输入考试成绩并保存在变量score中，如果成绩>=60，则在控制台输出“及格”，否则输出“回家挨揍”
			

			练习2：在弹出框中输入一个年份，保存在变量year中，判断该年是否为闰年，并在控制台给出提示
				闰年：能被400整除的年份 或者 能被4整除但不能被100整除
				输出格式如下：
					**年是闰年
					**年是平年
		5.位运算符
			<< >> & | ^
			
			<< 左移
			>> 右移
			
			& 按位与，二进制位数逐位比较，上下两位都为1，结果为1，否则为0

			| 按位或，二进制位数逐位比较，上下两位含有1，结果为1，否则为0

			^ 按位异或，二进制位数逐位比较，相同为0，不同为1
				交换两个变量的值：
					var a=5,b=3;
					var c=a;
					a=b;
					b=c;
				---------------
					var a=5,b=3;
					a=a^b; //a^=b
					b=a^b; //b^=a
					a=a^b; //a^=b
		6.赋值运算符
			=
			将等号右边的值赋给左边的变量
			
			混合赋值运算符：
				+= -= *= /= %= ^= ........

				a+=b --> a=a+b
				a*=b --> a=a*b
		

			
