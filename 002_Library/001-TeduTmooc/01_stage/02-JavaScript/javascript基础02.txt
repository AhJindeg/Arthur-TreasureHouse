十二、对象

   是引用类型数据
   对象是一组属性和方法的集合
   万物皆对象

（1）js的对象
   自定义对象：自己创建的对象
   内置对象：js提供的对象
   宿主对象：根据不同的执行环境划分

（2）使用对象字面量创建对象
   { 属性名：属性值，属性名：属性值 }
   属性名的引号可加可不加，如果含有特殊字符必须添加

（3）属性的访问
   对象.属性名
   对象['属性名']
      如果属性名不存在返回的结果是undefined

（4）使用内置构造函数创建对象
   new Object()   返回一个空对象，需要单独添加每一个属性
   构造函数：使用new来调用，返回对象

（6）遍历属性
   通过循环的方式，依次访问对象中的每个属性
   for(var k in 对象){
      k   代表每一个属性名
      对象[k]   代表属性名对应的属性值
   };

（7）方法
   方法：对应的是一个函数，需要调用
   var person={
      play:function(){
         this   // 指向调用方法的对象
      }
   }
   person.play(); // 调用方法

（8）检测属性是否存在
   对象.属性===undefined   true->不存在   false->存在
   对象.hasOwnProperty('属性名')   true->存在   false->不存在
   '属性名' in 对象   true->存在   false->不存在

2. 数据的存储
   原始数据：将数据执行保存到了栈内存
   引用类型：包括对象、函数、数组等都是引用类型数据，将数据保存在了堆内存中，同时会生成一个地址，然后将地址保存到了栈内存的变量中
   引用类型数据的销毁：数据不被任何的地址所指向就会自动销毁；
   null 表示空地址，不指向任何的引用类型数据，只需要赋值为null即可销毁引用类型数据

十三、数组

   数组是一组数据的集合，每个数据称为元素
   
（1）数组字面量
   [ 元素1，元素2...]

（2）访问数组元素
   数组[下标]
   下标：自动为每个元素添加的编号，是0开始的整数

（3）数组的长度
   数组.length   获取数组元素的个数
   在数组的末尾添加新的元素   数组[ 数组.length ]=值

（4）内置构造函数创建数组
   new Array(元素1，元素2...)
   new Array(3)   创建一个数组，初始化长度，可以添加更多个元素

（5）数组的分类
   数组分为索引数组和关联数组
   索引数组：以>=0的整数作为下标
   关联数组：以字符串作为下标，需要手动添加元素，是为了强调某一个元素
   
（6）遍历数组
   依次访问对象中的每个元素
   for-in
   for(var k in 数组){
      k   代表下标
      数组[k]   下标对应的元素
   }
   循环
   for(var i=0；i<数组.length；i++){
      i   代表下标
      数组[i]   下标对应的元素
   };

（7）数组API

   API：JS中预定义好的一些函数或者方法
   如何学习API：作用、有哪些参数、返回结果
      针对于数组：查看原数组是否会发生变化

   toString()   将数组转为字符串，元素之间用逗号隔开
   join()   将数组转为字符串，可以指定元素之间的分隔符
   concat(拼接数组1，拼接数组2)   拼接多个数组
   slice(start，end)   截取数组下标，start开始的下标，end结束的下标，不包括end本身，end为空截取到最后，下标为负数表示倒数，返回截取到的元素
   splice( start,count,v1,v2)   删除数组元素，start开始的下标，count删除的长度，count为空删除到最后，下标为负数表示倒数，v1，v2表示删除后补充的元素，返回删除的元素，原数组会发生变化
   reverse()   翻转数组元素，原数组会发生变化
   sort()   对数组进行排序，默认是按照首个字符的Unicode码排列
         arr.sort( function(a,b){ return a-b; // 从小到大 从大到小b-a});
   push()   在数据的末尾添加元素，返回数组的长度，原数组会发生变化
   pop()   删除数组末尾的一个元素，返回删除的元素，原数组会发生变化
   unshift()   在数据开头添加元素，返回数组的长度，原数组会发生变化
   shift()   删除数组开头的一个元素，返回删除的元素，原数组会发生变化
   indexOf()   查找数组中是否含有某个元素，返回下标，如果找不到返回-1
   
（8）二维数组
   对数据进行二次分类
   [ [元素1,元素2] [元素3,元素4] ]
   访问二维数组：数组[下标][下标]

十四、字符串对象

   JS中提供了3种包装对象：字符串对象、数值对象、布尔对象

   包装对象：为了让原始类型的数据引用类型的数据一样，具有属性和方法
   new String()   将任意的数据转为字符串，返回对象
   String()   将任意的数据转为字符串，返回字符串



（1） 转义字符 --- \
   \'   将具有特殊意义的引号转为普通的引号
   \t   将字符t转义为制表符(多个连续的空格，tab键)
   \n   将字符n转义为换行符

（2）API
   所有的字符串对象下的API都不会对原来的字符串产生任何影响，会生成一个新字符串
   length   获取字符串的长度
   charAt()   获取下标对应的字符，也可以使用数组的写法   字符串[下标]
   indexOf()   查找字符串中是否含有某个字符串，返回满足条件的第一个的下标，找不到返回-1
   lastIndexOf()   查找字符串中是否含有某个字符串，返回满足条件的最后一个的下标，找不到返回-1
   toUpperCase()   英文字母转大写
   toLowerCase()   英文字母转小写
   slice(start,end)   截取字符串，start开始的下标，end结束的下标，不包括end本身，end为空截取到最后，如果下标为负数表示倒数
   substr(start,count)   截取字符串，start开始的下标，count的截取的长度，count为空截取到最后，下标为负数表示倒数
   split()   将字符串转为数组























